{"version":3,"sources":["logo.svg","components/pagination.js","components/OverallAnalysis.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","props","useState","currentPage","setCurrentPage","pageNumberLimit","maxpageNumberLimit","setmaxpageNumberLimit","minpageNumberLimit","setminpageNumberLimit","console","log","React","useEffect","pagination","handlePagination","handleNextbn","e","window","scrollTo","preventDefault","pages","handlePageChange","handlePrevbtn","renderPageNumbers","Array","from","i","value","id","onClick","Number","target","className","pageIncrementBtn","pageDecrementBtn","style","fontSize","OverallAnalysis","marginLeft","width","height","Overall_POI_vs_tweet_count","data","Overall_country_vs_tweet_count","Overall_language_vs_tweet_count","p_n_sentiment","p_n_political","p_n_v_info","v_hecitancy","App","ref","useRef","block","setBlock","keyword","setKeyword","flag","setFlag","navlink","setNavlink","poi","setPoi","country","setCountry","query_data","setQuery_data","page","setPages","setPagination","tKey","settKey","poi_flag","setpoi_flag","news","setnews","news_data","setnews_data","colors","labels","datasets","label","backgroundColor","borderColor","borderWidth","setp_n_sentiment","setp_n_political","setp_n_v_info","setv_hecitancy","query_POI_vs_tweet_count","setQuery_POI_vs_tweet_count","querysumsentiment","setquerysumsentiment","query_country_vs_tweet_count","setQuery_country_vs_tweet_count","setOverall_POI_vs_tweet_count","setOverall_country_vs_tweet_count","setOverall_language_vs_tweet_count","querytweetsentiment","setQuerytweetsentiment","setResonseData","keys","Object","vals","values","lab","dat","bcolor","length","push","d","d1","handlenotsetBlock","baseURL","getSerachResults","a","axios","post","JSON","stringify","then","response","num","numFound","size","Math","floor","docs","response_keys","get","resp","articles","handlesetBlock","tag","blocking","Navbar","bg","variant","Container","Brand","Nav","Link","Overall_insights","p_keysenti","p_valsenti","p_keysenti1","p_valsenti1","p_keysenti2","p_valsenti2","p_keysenti3","p_valsenti3","FormGroup","display","marginTop","InputGroup","FormControl","placeholder","onChange","Button","disabled","current","Form","Group","Label","Select","marginRight","map","poii","countr","Row","Col","xs","sm","Tabs","activeKey","onSelect","k","Tab","eventKey","title","res","poi_name","tweet_text","sentiment","p","query_sentiment_analysis","source","name","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bab6ffe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState,useEffect } from 'react'\nimport './pagination.css'\n\nfunction Pagination(props){\n    \n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\n    const [maxpageNumberLimit, setmaxpageNumberLimit] = useState(5);\n    const [minpageNumberLimit, setminpageNumberLimit] = useState(0);\n    \n    const changePage=()=>{\n        setCurrentPage(1)\n    }\n    console.log(props)\n    React.useEffect(() => {\n        console.log(\"hiii\")\n        if (props.pagination) {\n          setCurrentPage(1)\n          props.handlePagination()\n        }\n\n      }, [])\n    const handleNextbn = (e) => {\n        window.scrollTo(0,0)\n        e.preventDefault();\n        if(currentPage<props.pages){\n            setCurrentPage(currentPage + 1)\n            props.handlePageChange(currentPage,1)\n        }\n        // console.log(currentPage, maxpageNumberLimit)\n        if ((currentPage + 1) > maxpageNumberLimit) {\n            // console.log(\"next\")\n            setmaxpageNumberLimit(maxpageNumberLimit + pageNumberLimit);\n            setminpageNumberLimit(minpageNumberLimit + pageNumberLimit);\n        }\n    }\n    const handlePrevbtn = (e) => {\n        window.scrollTo(0,0)\n        e.preventDefault();\n        if(currentPage>1){\n        setCurrentPage(currentPage - 1);\n        props.handlePageChange(currentPage,2)\n        }\n        // console.log(currentPage  , maxpageNumberLimit)\n        if (currentPage>1 && (currentPage - 1) % pageNumberLimit == 0) {\n            // console.log(\"prev\")\n            setmaxpageNumberLimit(maxpageNumberLimit - pageNumberLimit)\n            setminpageNumberLimit(minpageNumberLimit - pageNumberLimit)\n        }\n        \n    }\n    const renderPageNumbers = Array.from(Array(props.pages), (e, i) => {\n        if (i + 1 < maxpageNumberLimit + 1 && i + 1 > minpageNumberLimit) {\n            return <li key={i} value={i + 1} id={i + 1} onClick={(e) => { e.preventDefault();setCurrentPage(Number(e.target.id)); props.handlePageChange(Number(e.target.id),0) }}\n                className={currentPage == i + 1 ? 'active' : null}>{i + 1}</li>\n        }\n        else {\n            return null\n        }\n    })\n    let pageIncrementBtn=null;\n    if(props.pages>maxpageNumberLimit){\n        pageIncrementBtn=<li onClick={handleNextbn}>&hellip;</li>\n    }\n    let pageDecrementBtn=null;\n    if(minpageNumberLimit>1){\n        pageDecrementBtn=<li onClick={handlePrevbtn}>&hellip;</li>\n    }\n    return (\n        <div>\n            <ul className=\"pageNumbers\">\n                <li>\n                    <button><p style={{ fontSize: \"0.7em\" }} onClick={handlePrevbtn}>Prev</p></button>\n                </li>\n                {pageDecrementBtn}\n                {renderPageNumbers}\n                {pageIncrementBtn}\n                <li>\n                    <button><p style={{ fontSize: \"0.7em\" }} onClick={handleNextbn}>Next</p></button>\n                </li>\n            </ul>\n\n        </div>\n    )\n\n}\nexport default Pagination","import React, { useState, useEffect } from \"react\";\n\nimport { Bar, Doughnut, Pie } from 'react-chartjs-2';\nimport axios from 'axios'\nimport Chart from 'chart.js/auto';\nimport { div } from \"react-bootstrap\";\nfunction OverallAnalysis(props) {\n\n    return (\n        <div>\n            <div style={{ marginLeft: \"20%\", width: \"50%\", height: \"70%\" }}>\n                \n                {props.Overall_POI_vs_tweet_count &&\n                <>\n                <br/>\n                <b style={{marginLeft:\"12em\"}}>Plot for Overall POI tweets Count</b>\n                    <Bar data={props.Overall_POI_vs_tweet_count} />\n                </>\n                }\n            </div>\n            <div style={{ marginLeft: \"30%\", width: \"30%\" }}>\n                {props.Overall_country_vs_tweet_count &&\n                <>\n                <br/>\n                <b style={{marginLeft:\"4em\"}}>Plot for Overall tweets per country</b>\n                    <Doughnut data={props.Overall_country_vs_tweet_count}></Doughnut>\n                    </>\n                }\n            </div>\n            <div style={{ marginLeft: \"30%\", width: \"30%\" }}>\n                {props.Overall_language_vs_tweet_count &&\n                <>\n                <br/>\n                <b style={{marginLeft:\"4em\"}}>Plot for Overall tweets per lanuage</b>\n                    <Pie data={props.Overall_language_vs_tweet_count}></Pie>\n                    </>\n                }\n            </div>\n\n\n            <div style={{ marginLeft: \"20%\", width: \"50%\", height: \"70%\" }}>\n                {props.p_n_sentiment &&\n                <>\n                <br/>\n                <b style={{marginLeft:\"12em\"}}>Plot for sentiment on general population tweets </b>\n                    <Bar data={props.p_n_sentiment} />\n                    </>\n                }\n\n            </div> \n             <div style={{ marginLeft: \"20%\", width: \"50%\", height: \"70%\" }}>\n                {props.p_n_political &&\n                <>\n                <br/>\n                <b style={{marginLeft:\"12em\"}}>Plot for sentiment on overall political rhetoric analysis </b>\n                    <Bar data={props.p_n_political} />\n                </>\n                }\n            </div>\n            <div style={{ marginLeft: \"20%\", width: \"50%\", height: \"70%\" }}>\n                {props.p_n_v_info &&\n                <>\n                <br/>\n                <b style={{marginLeft:\"12em\"}}>Plot for sentiment on Vaccine Hesistancy </b>\n                    <Bar data={props.p_n_v_info} /></>\n                }\n            </div>\n            <div style={{ marginLeft: \"20%\", width: \"50%\", height: \"70%\" }}>\n            <>\n                <br/>\n                <b style={{marginLeft:\"8em\"}}>Plot for sentiment on persuasion against Vaccine Hesistancy </b>\n                {props.v_hecitancy &&\n                    <Bar data={props.v_hecitancy} />\n                }\n                </>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default OverallAnalysis;","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Nav, Form, InputGroup, FormControl, FormGroup, Row, Col, Container, Tabs, Tab } from 'react-bootstrap';\nimport { useState, useRef, useLayoutEffect } from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport axios from \"axios\";\nimport Pagination from './components/pagination';\nimport OverallAnalysis from './components/OverallAnalysis';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nfunction App() {\n  const ref = useRef(null)\n  const [block, setBlock] = useState(false)\n  const [keyword, setKeyword] = useState(\"\")\n  const [flag, setFlag] = useState(false)\n  const [navlink, setNavlink] = useState(true)\n  const [poi, setPoi] = useState(\"\")\n  const [country, setCountry] = useState(\"\")\n  const [query_data, setQuery_data] = useState([])\n  const [active, setActive] = useState(1)\n  const [page, setPages] = useState()\n  const [pagination, setPagination] = useState(false)\n  const [tKey, settKey] = useState(\"POI\")\n  const [poi_flag, setpoi_flag] = useState(true)\n  const [news,setnews]=useState([])\n  const [news_data,setnews_data]=useState([])\n  const [colors, setColors] = useState([\n    \"#99ff99\",\n    \"#ff9999\",\n    \"#66a3ff\",\n    \"#800080\",\n    \"#FFFF00\",\n    \"#00FF00\",\n    \"#FF00FF\",\n    \"#FFC0CB\",\n    \"#FFA500\",\n    \"#800000\",\n    \"#008000\",\n    \"#7FFD4\",\n    \"#808000\",\n    \"#808080\",\n    \"#FFFFFF\",\n    \"#A52A2A\"\n  ])\n\n const [p_n_sentiment,setp_n_sentiment] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n\n  const [p_n_political,setp_n_political] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n\n  const [p_n_v_info,setp_n_v_info] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n\n  const [v_hecitancy,setv_hecitancy] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n  const [query_POI_vs_tweet_count, setQuery_POI_vs_tweet_count] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n  const [querysumsentiment, setquerysumsentiment] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n  const [query_country_vs_tweet_count, setQuery_country_vs_tweet_count] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n  const [Overall_POI_vs_tweet_count, setOverall_POI_vs_tweet_count] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n\n  const [Overall_country_vs_tweet_count, setOverall_country_vs_tweet_count] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n\n  const [Overall_language_vs_tweet_count, setOverall_language_vs_tweet_count] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n  const [querytweetsentiment, setQuerytweetsentiment] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n\n  const [state, setState] = useState({\n    labels: [], datasets: [\n      {\n        label: '',\n        backgroundColor: 'rgb(54, 162, 235)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: []\n      }\n    ]\n  })\n\n  const setResonseData = (data, i) => {\n    let keys = Object.keys(data)\n    let vals = Object.values(data)\n    let lab = []\n    let dat = []\n    let bcolor = []\n\n    for (let i = 0; i < keys.length; i++) {\n      if (vals[i] > 0) {\n        lab.push(keys[i]);\n        dat.push(vals[i])\n      }\n      bcolor.push(colors[i])\n    }\n    if (i == 1) {\n      setQuery_POI_vs_tweet_count({\n        labels: lab, datasets: [\n          {\n            label: 'Query_POI_vs_tweet_count',\n            backgroundColor: bcolor,\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 1,\n            data: dat\n          }\n        ]\n      })\n\n    }\n    else if (i == 2) {\n      setQuery_country_vs_tweet_count({\n        labels: lab, datasets: [\n          {\n            label: 'Query_country_vs_tweet_count',\n            backgroundColor: bcolor,\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 1,\n            data: dat\n          }\n        ]\n      })\n    }\n    else if (i == 4) {\n      let l = ['postive_tweet_percentage', 'neutral_tweet_percentage', 'negative_tweet_percentage']\n      let d = []\n      d.push(vals[0])\n      d.push(vals[2])\n      d.push(vals[3])\n      console.log(\"dileep\")\n      setQuerytweetsentiment({\n        labels: l, datasets: [\n          {\n            label: 'Query_country_vs_tweet_count',\n            backgroundColor: bcolor,\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 1,\n            data: d\n          }\n        ]\n      })\n      let l1 = [\"sum_of_positive_sentiment\", \"sum_of_negative_sentiment\"]\n      let d1 = []\n      d1.push(vals[1])\n      d1.push((vals[4])*-1)\n      console.log(vals)\n      setquerysumsentiment({\n        labels: l1, datasets: [\n          {\n            label: 'Query_country_vs_tweet_count',\n            backgroundColor: bcolor,\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 1,\n            data: d1\n          }\n        ]\n      })\n\n    }\n    handlenotsetBlock()\n  }\n  const [baseURL, setBaseUrl] = useState(\"https://18.217.156.180:8000/search/\")\n  const getSerachResults = async() => {\n    console.log(country)\n    try{\n\n    \n    await axios\n      .post(baseURL, JSON.stringify({\n        \"poi_name\": poi,\n        \"country\": country,\n        \"search_query\": keyword,\n        \"start\": 0,\n        \"poi_flag\": true\n      }))\n      .then((response) => {\n        console.log(response)\n        let num = response.data.response.numFound\n        let size = Math.floor(num / 10)\n        if (num % 10 == 0) {\n          setPages(size)\n        }\n        else {\n          setPages(size + 1)\n        }\n        setQuery_data(response.data.response.docs);\n        let response_keys = Object.keys(response.data)\n        for (let i = 0; i < response_keys.length; i++) {\n          if (response_keys[i] != 'response') {\n            setResonseData(response.data[response_keys[i]], i)\n          }\n\n        }\n\n      })\n\n     axios.get(`https://gnews.io/api/v4/search?q=${keyword}&token=f853c18f30683375a6c87b483f74e432`).then((response)=>{\n      console.log(response)\n      let resp=response.data.articles\n      setnews(resp)\n      let data=[]\n      for(let i=0; i<10;i++){\n        data.push(resp[i])\n      }\n      setnews_data(data)\n    })\n  }\n  catch{\n    handlenotsetBlock()\n  }\n  }\n  const getGeneralResults = () => {\n    console.log(poi_flag)\n    axios\n      .post(baseURL, JSON.stringify({\n        \"poi_name\": poi,\n        \"country\": country,\n        \"search_query\": keyword,\n        \"start\": 0,\n        \"poi_flag\": false\n      }))\n      .then((response) => {\n        console.log(response)\n        let num = response.data.response.numFound\n        let size = Math.floor(num / 10)\n        if (num % 10 == 0) {\n          setPages(size)\n        }\n        else {\n          setPages(size + 1)\n        }\n        setQuery_data(response.data.response.docs);\n        let response_keys = Object.keys(response.data)\n        for (let i = 0; i < response_keys.length; i++) {\n          if (response_keys[i] != 'response') {\n            setResonseData(response.data[response_keys[i]], i)\n          }\n\n        }\n\n      })\n  }\n  const handlePageChange = (page, flag) => {\n    handlesetBlock()\n    let p = 0\n    if (flag == 0) {\n      p = page - 1;\n    }\n    else if (flag == 1) {\n      p = page;\n    }\n    else if (flag == 2) {\n      p = page - 2;\n    }\n    axios.post(baseURL, JSON.stringify({\n      \"poi_name\": poi,\n      \"country\": country,\n      \"search_query\": keyword,\n      \"start\": (p) * 10,\n      \"poi_flag\": poi_flag\n    }))\n      .then((response) => {\n        setQuery_data(response.data.response.docs);\n        handlenotsetBlock()\n        setResonseData(response.data.query_sentiment_analysis, 4)\n      })\n  }\n\n  // const handleBlock=()=>{\n  //   setBlock(true)\n  // }\n  const handleSearch = () => {\n    console.log(ref.current)\n    if (flag) {\n      // ref.current.changePage()\n      setPagination(true)\n    }\n    handlesetBlock()\n    setFlag(true);\n    getSerachResults();\n\n  }\n  const handlePagination = () => {\n    setPagination(false)\n  }\n  const countries_dropdown = [\"USA\", \"INDIA\", \"MEXICO\"]\n  const pois_dropdown = [\"narendramodi\", \"drharshvardhan\",\n    \"MoHFW_INDIA\",\n    \"ysjagan\",\n    \"smritiirani\",\n    \"HHSGov\",\n    \"JoeBiden\",\n    \"KamalaHarris\",\n    \"XavierBecerra\",\n    \"GavinNewsom\",\n    \"lopezobrador_\",\n    \"SSaludCdMx\",\n    \"SSalud_mx\",\n    \"SecSaludBAQ\",\n    \"MartinOrozcoAgs\"]\n\n  const getOverviewData = () => {\n     axios\n      .post(\"https://18.217.156.180:8000/overview/\", JSON.stringify({\n        \"poi_name\": \"*\",\n        \"country\": \"\",\n        \"search_query\": \"\",\n        \"start\": 0\n      }))\n      .then((response) => {\n        console.log(response)\n        if (response.data.Overall_POI_vs_tweet_count) {\n          let bcolor = []\n          for (let i = 0; i < Object.keys(response.data.Overall_POI_vs_tweet_count).length; i++) {\n            bcolor.push(colors[i])\n          }\n          console.log(bcolor)\n          setOverall_POI_vs_tweet_count({\n            labels: Object.keys(response.data.Overall_POI_vs_tweet_count), datasets: [\n              {\n                label: 'Overall_POI_vs_tweet_count',\n                backgroundColor: bcolor,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: Object.values(response.data.Overall_POI_vs_tweet_count)\n              }\n            ]\n          })\n        }\n\n        if (response.data.Overall_country_vs_tweet_count) {\n          let bcolor = []\n          for (let i = 0; i < Object.keys(response.data.Overall_country_vs_tweet_count).length; i++) {\n            bcolor.push(colors[i])\n          }\n          console.log(bcolor)\n          setOverall_country_vs_tweet_count({\n            labels: Object.keys(response.data.Overall_country_vs_tweet_count), datasets: [\n              {\n                label: 'Overall_POI_vs_tweet_count',\n                backgroundColor: bcolor,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: Object.values(response.data.Overall_country_vs_tweet_count)\n              }\n            ]\n          })\n        }\n        if (response.data.Overall_language_vs_tweet_count) {\n          let bcolor = []\n          for (let i = 0; i < Object.keys(response.data.Overall_language_vs_tweet_count).length; i++) {\n            bcolor.push(colors[i])\n          }\n          console.log(bcolor)\n          setOverall_language_vs_tweet_count({\n            labels: Object.keys(response.data.Overall_language_vs_tweet_count), datasets: [\n              {\n                label: 'Overall_country_vs_tweet_count',\n                backgroundColor: bcolor,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: Object.values(response.data.Overall_language_vs_tweet_count)\n              }\n            ]\n          })\n        }\n\n\n        if (response.data.Overall_insights) {\n\n          let keys=Object.keys(response.data.Overall_insights)\n\n          let values=Object.values(response.data.Overall_insights)\n\n          let bcolor = []\n          for (let i = 0; i < 2; i++) {\n            bcolor.push(colors[i])\n          }\n\n          let p_keysenti=[]\n          p_keysenti.push(keys[0])\n          p_keysenti.push(keys[1])\n\n          let p_valsenti=[]\n          p_valsenti.push(values[0])\n          p_valsenti.push(values[1])\n\n          let p_keysenti1=[]\n          p_keysenti1.push(keys[2])\n          p_keysenti1.push(keys[3])\n\n          let p_valsenti1=[]\n          p_valsenti1.push(values[2])\n          p_valsenti1.push(values[3])\n\n          let p_keysenti2=[]\n          p_keysenti2.push(keys[4])\n          p_keysenti2.push(keys[5])\n\n          let p_valsenti2=[]\n          p_valsenti2.push(values[4])\n          p_valsenti2.push(values[5])\n\n          let p_keysenti3=[]\n          p_keysenti3.push(keys[5])\n          p_keysenti3.push(keys[6])\n\n          let p_valsenti3=[]\n          p_valsenti3.push(values[5])\n          p_valsenti3.push(values[6])\n\n\n          setp_n_sentiment({\n            labels: p_keysenti, datasets: [\n              {\n                label: 'overall sentiment analysis',\n                backgroundColor: bcolor,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: p_valsenti\n              }\n            ]\n          })\n\n          setp_n_political({\n            labels: p_keysenti1, datasets: [\n              {\n                label: 'overall policatal rhetoric analysis',\n                backgroundColor: bcolor,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: p_valsenti1\n              }\n            ]\n          })\n\n          setp_n_v_info({\n            labels: p_keysenti2, datasets: [\n              {\n                label: 'overall vaccine disinfo analysis',\n                backgroundColor: bcolor,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: p_valsenti2\n              }\n            ]\n          })\n\n          setv_hecitancy({\n            labels: p_keysenti3, datasets: [\n              {\n                label: 'overall Persuation against vaccine disinfo analysis',\n                backgroundColor: bcolor,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: p_valsenti3\n              }\n            ]\n          })\n\n\n\n          // let bcolor = []\n          // for (let i = 0; i < Object.keys(response.data.Overall_language_vs_tweet_count).length; i++) {\n          //   bcolor.push(colors[i])\n          // }\n          // console.log(bcolor)\n          // setOverall_language_vs_tweet_count({\n          //   labels: Object.keys(response.data.Overall_language_vs_tweet_count), datasets: [\n          //     {\n          //       label: 'Overall_country_vs_tweet_count',\n          //       backgroundColor: bcolor,\n          //       borderColor: 'rgba(0,0,0,1)',\n          //       borderWidth: 2,\n          //       data: Object.values(response.data.Overall_language_vs_tweet_count)\n          //     }\n          //   ]\n          // })\n        }\n\n        handlenotsetBlock()\n      })\n  }\n  const handleOverview = () => {\n    handlesetBlock()\n    setNavlink(false)\n    getOverviewData()\n  }\n  const handlesetBlock = () => {\n    setBlock(true)\n  }\n  const handlenotsetBlock = () => {\n    setBlock(false)\n  }\n  return (\n    <div>\n      <BlockUi tag=\"div\" blocking={block}>\n        <div>\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Container>\n              <Navbar.Brand>Twitter</Navbar.Brand>\n              <Nav className=\"me-auto\">\n                <Nav.Link onClick={() => setNavlink(true)}>Home</Nav.Link>\n                <Nav.Link onClick={handleOverview}>Overview Analytics</Nav.Link>\n              </Nav>\n            </Container>\n          </Navbar>\n        </div>\n\n        {navlink &&\n          <div>\n            <div className={flag ? 'top-screen' : 'center-screen'}>\n\n              <FormGroup style={{ width: \"90%\", display: 'flex', marginLeft: '5em', marginTop: '1em' }}>\n                <InputGroup style={{ width: flag ? '30%' : '80%', height: \"70%\" }}>\n                  <FormControl\n                    value={keyword}\n                    placeholder=\"Search\"\n                    aria-label=\"keyword\"\n                    aria-describedby=\"basic-addon1\"\n                    onChange={(e) => { setKeyword(e.target.value) }}\n                  />\n                </InputGroup>\n                <Button style={{ marginLeft: '10px', width: \"6em\", height: '2.4em' }} disabled={keyword!=\"\"?false:true} onClick={handleSearch}>Search</Button>\n\n                {flag && <div style={{ display: 'flex', marginLeft: '6%' }}>\n                  <Form.Group style={{ display: 'flex' }}>\n                    <Form.Label>POI</Form.Label>\n                    <Form.Select value={poi} onChange={(e) => setPoi(e.target.value)} style={{ marginLeft: '0.5em', width: \"11em\", marginRight: '0.5em' }}>\n                      <option value=\"\">Choose...</option>\n                      {pois_dropdown.map((poii, i) =>\n                        <option key={i} value={poii}>{poii}</option>\n                      )\n                      }\n                    </Form.Select>\n                  </Form.Group>\n                  <Form.Group style={{ display: 'flex' }}>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Select value={country} onChange={(e) => setCountry(e.target.value)} style={{ marginLeft: '0.5em', width: \"11em\", marginRight: '0.5em' }}>\n                      <option value=\"\">Choose...</option>\n                      {countries_dropdown.map((countr, i) =>\n                        <option key={i} value={countr}>{countr}</option>\n                      )\n                      }\n                    </Form.Select>\n                  </Form.Group>\n                </div>\n                }\n              </FormGroup>\n\n            </div>\n\n\n            {flag && <Container>\n\n              <Row>\n                <Col xs={4} sm={4} >\n                  <b>Tweets Search Results</b>\n                  <hr></hr>\n                  <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={tKey}\n                    onSelect={(k) => {\n                      settKey(k);\n                      console.log(k)\n                      if (k == \"POI\") {\n                        handlesetBlock()\n                        setpoi_flag(true)\n                        getSerachResults()\n                      }\n                      else if (k == \"General\") {\n                        handlesetBlock()\n                        setpoi_flag(false);\n                        getGeneralResults()\n                      }\n                    }}\n                    className=\"mb-3\"\n                  >\n                    <Tab eventKey=\"POI\" title=\"POI Results\">\n                    </Tab>\n                    <Tab eventKey=\"General\" title=\"General Results\">\n                    </Tab>\n                  </Tabs>\n                  {query_data.length>0 && query_data.map((res, i) =>\n                    <>\n                      <p key={i}><b key={i}>{'@' + res.poi_name ? res.poi_name : \"General\"}</b> <br></br>\n                        <p style={{ fontSize: \"0.8em\" }}>{res.tweet_text}</p>\n                        <p style={{ fontSize: \"0.8em\" }}>Sentiment: {res.sentiment}</p>\n                      </p>\n                    </>\n                  )\n                  }\n                  {query_data.length>0 &&\n                    <Pagination pages={page} handlePageChange={handlePageChange} pagination={pagination} handlePagination={handlePagination} ref={ref}></Pagination>\n                  }\n                </Col>\n                <Col xs={4} sm={4}>\n                  <b>News Search Results</b>\n                  <hr></hr>\n                  { news && news_data.map((res,i)=>\n                  <>\n                  <p key={i}><b key={i}>{'@' + res.source.name}</b> <br></br>\n                        <p style={{ fontSize: \"0.8em\" }}>{res.content}</p>\n\n                      </p>\n                  </>\n                  )\n                  }\n                </Col>\n                <Col xs={4} sm={4}>\n                  <b> Search Results Analysis</b>\n                  <hr></hr>\n                  \n                  {query_data.length>0 && poi_flag && \n                  <>\n                  <br/>\n                  <b style={{marginLeft:\"5em\"}}>Plot for POI tweets Count</b>\n                  <Bar\n                    data={query_POI_vs_tweet_count}\n                  />\n                  </>\n                  }\n                  {query_data.length>0 &&\n                  <>\n                  <br/>\n                  <b style={{marginLeft:\"5em\"}}>Plot for Country wise tweet Count</b>\n                    <Bar\n                      data={query_country_vs_tweet_count}\n                    ></Bar>\n                    </>\n                  }\n                  {query_data.length>0 &&\n                  <>\n                  <br/>\n                  <b style={{marginLeft:\"5em\"}}>Plot for tweet sentiment </b>\n                    <Pie  data={querytweetsentiment}></Pie>\n                \n                  </>\n}\n                  \n                  {\n                    query_data.length>0 &&\n                    <>\n                    <br/>\n                    <b style={{marginLeft:\"1em\"}}>Plot for sum of overall tweet sentiment</b>\n                    <Bar data={querysumsentiment} />\n                    </>\n                  }\n                \n                </Col>\n              </Row>\n            </Container>\n            }\n          </div>\n        }\n        {!navlink && <div>\n          <OverallAnalysis\n            Overall_POI_vs_tweet_count={Overall_POI_vs_tweet_count}\n            Overall_country_vs_tweet_count={Overall_country_vs_tweet_count}\n            Overall_language_vs_tweet_count={Overall_language_vs_tweet_count}\n            v_hecitancy={v_hecitancy}\n            p_n_v_info={p_n_v_info}\n            p_n_political={p_n_political}\n            p_n_sentiment={p_n_sentiment}\n          ></OverallAnalysis>\n        </div>\n\n        }\n      </BlockUi>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}